name: Run Python Script on Push

on:
  push:
    branches:
      - main  # Replace with the branch you want this workflow to trigger on

env:
  GITHUB_TOKEN: ${{ secrets.PAT }}

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Match the Python version used in your script

      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas tabulate

      # Step 3: Run the Python script
      - name: Fetch and process workflow data
        run: |
          python - <<'EOF'
          import requests
          import pandas as pd
          import os
          from tabulate import tabulate

          def workflow_run():
              auth = f"Bearer {os.getenv('GITHUB_TOKEN')}"
              url = "https://api.github.com/repos/MGMResorts/mgm-af-migrations-via-actions/actions/workflows/110635589/runs?per_page=200"
              headers = {
                  'Accept': 'application/vnd.github+json',
                  'Authorization': auth,
                  'X-GitHub-Api-Version': '2022-11-28'
              }
              response = requests.request("GET", url, headers=headers)
              runs = response.json()['workflow_runs']
              total_runs = len(runs)

              # Extract data and handle nested fields (actor.login)
              data = []
              for idx, run in enumerate(runs, start=1):  # Add serial number
                  print(run)
                  data.append({
                      'Serial No.': idx,
                      'Id': run['id'],
                      'Id': f"[{run['id']}]({run['url']})",
                      'Name': run['name'],
                      'Repo Name': run['url'].split('/repos/')[-1].split('/actions')[0],
                      'Branch': run['head_branch'],
                      'Run Number': run['run_number'],
                      'Status': run['status'],
                      'Conclusion': run['conclusion'],
                      'Actor': run['actor']['login'] if run.get('actor') else 'N/A',
                      'Run URL': f"[View Run]({run['url']})"
                  })

              # Create DataFrame
              df = pd.DataFrame(data)
              total_keys = len(df.columns)  # Calculate the number of columns (keys)

              # Save to CSV
              df.to_csv("workflow_runs.csv", sep='\t', encoding='utf-8', index=False, header=True)

              # Generate Markdown table with pagination
              page_size = 20  # Number of rows per page
              num_pages = (total_runs + page_size - 1) // page_size  # Calculate total pages

              with open("summary.md", "w") as summary_file:
                  summary_file.write("# Workflow Runs Summary\n\n")
                  summary_file.write(f"**Total Workflow Runs: {total_runs}**\n")

                  for page in range(num_pages):
                      start = page * page_size
                      end = min(start + page_size, total_runs)
                      markdown_table = tabulate(
                          df.iloc[start:end],
                          headers="keys",
                          tablefmt="github",
                          showindex=False
                      )
                      summary_file.write(f"### Page {page + 1}\n\n")
                      summary_file.write(markdown_table + "\n\n")

          if __name__ == "__main__":
              workflow_run()
              print("Data fetched and summary generated successfully")
          EOF

        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}

      # Step 4: Upload the summary to GitHub Actions
      - name: Add summary to workflow
        run: cat summary.md >> $GITHUB_STEP_SUMMARY

       # Step 4: Upload the CSV as an artifact
      - name: Upload workflow_runs.csv
        uses: actions/upload-artifact@v4
        with:
          name: workflow-runs
          path: workflow_runs.csv
