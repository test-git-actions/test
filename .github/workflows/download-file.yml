name: Download File from Issue

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write

jobs:
  download-file:
    runs-on: ubuntu-latest
    steps:
      - name: Check out scripts
        uses: actions/checkout@v3

      - name: Parse issue body
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3

      - run: echo $JSON_STRING
        env:
          JSON_STRING: ${{ steps.parse-issue-body.outputs.jsonString }}
          
      - name: Extract RAW URL from issue body
        id: extract_url
        run: |
          FILE_URL="${{ fromJson(steps.parse-issue-body.outputs.jsonString).additional_information }}"
          echo "$FILE_URL"
      
          if [[ -n "$FILE_URL" ]]; then
            echo "📥 Downloading file from: $FILE_URL"            
            RAW_URL=$(echo "$FILE_URL" | grep -oP '(?<=\]\().*?(?=\))')
            echo "ADO_FILE_URL=$RAW_URL" >> $GITHUB_ENV
            echo "Extracted RAW URL $RAW_URL"
            
            if [[ -n "$RAW_URL" ]]; then
                TMP_DIR="/tmp/tmp_download"
                mkdir -p "$TMP_DIR"
                FILE_NAME=$(basename "$RAW_URL")
                FILE_PATH="$TMP_DIR/$FILE_NAME"
              
              if [[ "$RAW_URL" == *.txt ]]; then
                echo "📜 Text file detected. Downloading and renaming..."
                curl -L "$RAW_URL" -o "$FILE_PATH"                
                echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
                mv "$FILE_PATH" "$TMP_DIR/migration.yml"
                echo "✅ Migration file set to migration.yml"
                cat "$TMP_DIR/migration.yml"
                
              elif [[ "$RAW_URL" == *.zip ]]; then
                echo "📦 ZIP file detected. Downloading and extracting..."
                curl -L "$RAW_URL" -o "$FILE_PATH"
                echo "File saved to: $FILE_PATH"
                unzip -q "$FILE_PATH" -d "$TMP_DIR"
                echo "ZIP file extracted."
          
                # Find and process the first YAML file
                YAML_FILE=$(find "$TMP_DIR" -type f -name "*.yml" -print -quit)
                
                if [[ -n "$YAML_FILE" ]]; then
                  mv "$YAML_FILE" "$TMP_DIR/migration.yml"
                  echo "✅ First YAML file extracted and renamed to migration.yml."
                  echo "FILE_PATH=$TMP_DIR/migration.yml" >> $GITHUB_ENV
                  cat "$TMP_DIR/migration.yml"
                else
                  echo "❌ No YAML file found inside the ZIP."
                fi              
              else
                echo "⚠️ Unsupported file type. Only .txt and .zip files are allowed."
              fi              
            else
              echo "⚠️ Unable to extract direct file URL."
            fi
          else
            echo "⚠️ No file URL provided. Skipping download."
          fi

      - name: Set up Node.js
        continue-on-error: true
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Run fetch script with axios
        continue-on-error: true
        run: |
          npm install axios
          node -e "
          const axios = require('axios');
      
          axios.get(process.env.ADO_FILE_URL, {
            headers: { 
              'Authorization': 'Bearer ' + process.env.GH_TOKEN,
              'withCredentials': true 
            }
          })
          .then(response => console.log(response.data))
          .catch(error => console.error('Error:', error));
          "
        env:
          ADO_FILE_URL: "${{ env.ADO_FILE_URL }}"
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"



      - name: List contents of /tmp/tmp_download
        run: |
          echo ${{ env.FILE_PATH }}
          ls -l /tmp/tmp_download
