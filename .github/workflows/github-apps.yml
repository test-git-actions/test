name: Get GitHub App Installations

on:
  workflow_dispatch:
    inputs:
      source_org:
        description: 'Enter the GitHub organization name'
        required: true
        default: 'test-git-actions'
      github_token:
        description: 'Enter your GitHub token'
        required: true
        default: ''

jobs:
  fetch-installations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Log input variables
        run: |
          echo "Source Organization: ${{ github.event.inputs.source_org }}"
          echo "GitHub Token: ${{ github.event.inputs.github_token }}"

      - name: Install dependencies
        run: npm install axios

      - name: Fetch GitHub App installations
        env:
          SOURCE_ORG: ${{ github.event.inputs.source_org }}
          GITHUB_TOKEN: ${{ github.event.inputs.github_token }}
        run: |
          node -e "
          const axios = require('axios');
          const SOURCE_ORG = process.env.SOURCE_ORG;
          const GITHUB_TOKEN = process.env.GITHUB_TOKEN;
          const API_URL_SOURCE = \`https://api.github.com/orgs/\${SOURCE_ORG}/installations\`;

          const getGitHubAppInstallations = async () => {
              try {
                  console.log(\`Fetching GitHub App installations for organization '\${SOURCE_ORG}'...\`);
                  console.log('API URL:', API_URL_SOURCE);
                  console.log('Authorization header:', \`Bearer \${GITHUB_TOKEN}\`);

                  const response = await axios.get(API_URL_SOURCE, {
                      headers: {
                          Authorization: \`Bearer \${GITHUB_TOKEN}\`,
                          Accept: 'application/vnd.github.v3+json',
                      },
                  });

                  if (response.status === 200) {
                      const installations = response.data;
                      console.log(\`==================================================\`, installations);
                      console.log(\`Installed applications in organization '\${SOURCE_ORG}':\`);
                      installations.forEach((installation) => {
                          console.log(\`App Name: \${installation.app_slug}, App ID: \${installation.id}\`);
                      });
                      console.log(\`==================================================\`);
                  } else {
                      console.log(\`Failed to fetch GitHub App installations: \${response.status}\`);
                  }
              } catch (error) {
                  console.error('Error fetching GitHub App installations:', error.response ? error.response.data : error.message);
              }
          };

          getGitHubAppInstallations();
          "
