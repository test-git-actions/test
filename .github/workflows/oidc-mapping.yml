name: 🔄 Update Identity Mapping in JFrog on Issue Creation

on:
  workflow_call:

permissions:
  contents: read
  issues: write

env:
  OIDC_PROVIDER: "mgmri-enterprise-oidc"
  JFROG_URL: "https://mgmresorts.jfrog.ioo"
  
jobs:
  automate-oidc-mapping:
    runs-on: ubuntu-latest

    steps:

    - name: Check out scripts
      uses: actions/checkout@v3

    - name: Parse issue body
      id: parse-issue-body
      uses: stefanbuck/github-issue-parser@v3

    - name: Build matrix
      uses: actions/github-script@v6
      id: json
      with:
        script: |
          let repositories = process.env.REPOSITORIES.replace(/\r/g, '').split('\n');
          let json = JSON.stringify(repositories);
          console.log(json);
          core.setOutput('repositories', json);
      env:
        REPOSITORIES: ${{ steps.parse-issue-body.outputs.issueparser__repository_names }}

    - name: Set REPO_NAME, ORG_NAME Env Variable
      env:
        JSON_STRING: ${{ steps.parse-issue-body.outputs.jsonString }}
        REPO_LIST: ${{ steps.json.outputs.repositories }}
      run: |
        echo $JSON_STRING
        echo "REPO_NAMES=${REPO_LIST}" >> $GITHUB_ENV
        echo "ORG_NAME=${{ fromJson(steps.parse-issue-body.outputs.jsonString)._organization_name }}" >> $GITHUB_ENV

    - name: Setup jq
      run: sudo apt-get install -y jq

    - name: ✏️ Update Issue Title
      uses: actions/github-script@v6
      with:
        script: |
          const org = `${{ fromJson(steps.parse-issue-body.outputs.jsonString)._organization_name }}`;
          const repo = `${{ fromJson(steps.parse-issue-body.outputs.jsonString)._repository_names }}`;
          const newTitle = `🔄 [Automate OIDC Mapping] Request for ${org}/${repo}`;

          await github.rest.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: newTitle
          });

    - name: 💬 Comment on Issue Title Update
      uses: actions/github-script@v6
      with:
        script: |
          const org = `${{ fromJson(steps.parse-issue-body.outputs.jsonString)._organization_name }}`;
          const repo = `${{ fromJson(steps.parse-issue-body.outputs.jsonString)._repository_name }}`;

          const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

          const body = `
          ### 📝 Issue Title Updated

          The issue title has been updated to reflect the identity mapping request for **${org}/${repo}**.

          🔗 [View this workflow run](${runUrl})
          `;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body
          });
