name: Trigger JFrog Xray Indexing

on:
  workflow_call:

env:
  JF_URL: "https://mgmresorts.jfrog.io"
  USERNAME: "pkumar@mgmresorts.com"
  JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

jobs:
  trigger-xray-indexing:
    if: contains(github.event.issue.title, '[Xray Indexing]')
    runs-on: ubuntu-latest

    steps:
      - name: Parse issue body
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3

      - name: Echo parsed JSON
        run: echo "${{ steps.parse-issue-body.outputs.jsonString }}"

      - name: Debug parsed values and set env
        run: |
          BUILD_NAME="${{ fromJson(steps.parse-issue-body.outputs.jsonString).build_name }}"
          ORG="${{ fromJson(steps.parse-issue-body.outputs.jsonString).target_organization }}"
          echo "Parsed Organization: $ORG"
          echo "Parsed Build Name: $BUILD_NAME"

          CLEANED_ORG="${ORG#mgmri-}"
          echo "JF_PROJECT_KEY=$CLEANED_ORG" >> "$GITHUB_ENV"
          echo "BUILD_NAME=$BUILD_NAME" >> "$GITHUB_ENV"

          echo "JF_PROJECT_KEY : $CLEANED_ORG"

      - name: Verify and Index Build in Xray
        id: xray-index-check
        continue-on-error: true
        env:
          JF_URL: https://mgmresorts.jfrog.io
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          USERNAME: pkumar@mgmresorts.com
          BUILD_NAME: ${{ env.BUILD_NAME }}
          JF_PROJECT_KEY: ${{ env.JF_PROJECT_KEY }}
        run: |
          set -euo pipefail
      
          BIN_MGR_ID="default"
          AUTH_HEADER="Authorization: Bearer $JF_ACCESS_TOKEN"
      
          echo "🔍 Checking if build '${BUILD_NAME}' is already indexed in Xray..."
      
          HTTP_RESPONSE=$(mktemp)
          HTTP_STATUS=$(curl -s -w "%{http_code}" -o "$HTTP_RESPONSE" \
            -H "Content-Type: application/json" \
            -H "$AUTH_HEADER" \
            "$JF_URL/xray/api/v1/binMgr/$BIN_MGR_ID/builds?projectKey=$JF_PROJECT_KEY")
      
          RESPONSE=$(cat "$HTTP_RESPONSE")
          rm -f "$HTTP_RESPONSE"
      
          echo "http_status=$HTTP_STATUS" >> "$GITHUB_OUTPUT"
          echo "api_response=$(echo "$RESPONSE" | jq -c .)" >> "$GITHUB_OUTPUT"
      
          IS_INDEXED=$(echo "$RESPONSE" | jq -r --arg name "$BUILD_NAME" '.indexed_builds[]? | select(. == $name)')
          IS_NOT_INDEXED=$(echo "$RESPONSE" | jq -r --arg name "$BUILD_NAME" '.non_indexed_builds[]? | select(. == $name)')
      
          INDEX_TRIGGER_STATUS="N/A"
          INDEX_TRIGGER_RESPONSE="N/A"
          RESULT_MESSAGE=""
      
          if [[ -n "$IS_INDEXED" ]]; then
            RESULT_MESSAGE="✅ Build '$BUILD_NAME' is already indexed."
          elif [[ -n "$IS_NOT_INDEXED" ]]; then
            echo "⚙️ Build '$BUILD_NAME' is not indexed. Triggering indexing..."
            INDEX_TRIGGER_STATUS=$(curl -s -w "%{http_code}" -o /tmp/index_resp.txt \
              -X POST \
              -H "Content-Type: application/json" \
              -H "$AUTH_HEADER" \
              -d "{\"names\": [\"$BUILD_NAME\"]}" \
              "$JF_URL/xray/api/v1/binMgr/builds?projectKey=$JF_PROJECT_KEY")
            INDEX_TRIGGER_RESPONSE=$(cat /tmp/index_resp.txt | jq -c .)
      
            if [[ "$INDEX_TRIGGER_STATUS" -eq 200 ]]; then
              RESULT_MESSAGE="✅ Indexing triggered successfully for '$BUILD_NAME'."
            else
              RESULT_MESSAGE="❌ Failed to trigger indexing. HTTP $INDEX_TRIGGER_STATUS"
            fi
          else
            RESULT_MESSAGE="❌ Build '$BUILD_NAME' not found in either indexed or non-indexed list."
          fi
      
          echo "index_trigger_status=$INDEX_TRIGGER_STATUS" >> "$GITHUB_OUTPUT"
          echo "index_trigger_response=$INDEX_TRIGGER_RESPONSE" >> "$GITHUB_OUTPUT"
          echo "result_message=$RESULT_MESSAGE" >> "$GITHUB_OUTPUT"

      - name: Add Xray Indexing Result as Issue Comment
        uses: actions/github-script@v6
        with:
          script: |
            const httpStatus = `${{ steps.xray-index-check.outputs.http_status }}`
            const apiResponse = `${{ steps.xray-index-check.outputs.api_response }}`
            const indexStatus = `${{ steps.xray-index-check.outputs.index_trigger_status }}`
            const indexResponse = `${{ steps.xray-index-check.outputs.index_trigger_response }}`
            const resultMessage = `${{ steps.xray-index-check.outputs.result_message }}`
      
            const body = `
              ### 📦 Xray Build Indexing Summary)
              
              **Status:** ${resultMessage}
              
              **Initial API Call Status:** \`${httpStatus}\`  
              **Initial API Response:**  
              \`\`\`json
              ${apiResponse}
              \`\`\`
              
              **Index Trigger Call Status:** \`${indexStatus}\`  
              **Index Trigger Response:**  
              \`\`\`json
              ${indexResponse}
              \`\`\`
              
              🔗 [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})
            `
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
