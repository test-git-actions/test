name: Trigger JFrog Xray Indexing

on:
  workflow_call:
  issues:
    types: [opened]

env:
  JF_URL: "https://mgmresorts.jfrog.io"
  USERNAME: "pkumar@mgmresorts.com"
  JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

jobs:
  trigger-xray-indexing:
    if: contains(github.event.issue.title, '[Xray Indexing]')
    runs-on: ubuntu-latest

    steps:
      - name: Parse issue body
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3

      - name: Echo parsed JSON
        run: echo "${{ steps.parse-issue-body.outputs.jsonString }}"

      - name: Debug parsed values and set env
        run: |
          BUILD_NAME=${{ fromJson(steps.parse-issue-body.outputs.jsonString).build_name }}
          ORG=${{ fromJson(steps.parse-issue-body.outputs.jsonString).target_organization }}
          echo "Parsed Organization: $ORG"
          echo "Parsed Build Name: $BUILD_NAME"

          CLEANED_ORG="${ORG#mgmri-}"
          echo "JF_PROJECT_KEY=$CLEANED_ORG" >> "$GITHUB_ENV"
          echo "BUILD_NAME=$BUILD_NAME" >> "$GITHUB_ENV"

          echo "JF_PROJECT_KEY : $CLEANED_ORG"

      - name: Verify and Index Build in Xray
        id: xray-index-check
        env:
            JF_URL: https://mgmresorts.jfrog.io
            JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
            USERNAME: pkumar@mgmresorts.com
            BUILD_NAME: ${{ env.BUILD_NAME }}
            JF_PROJECT_KEY: ${{ env.JF_PROJECT_KEY }}
        run: |
            set -euo pipefail
        
            BIN_MGR_ID="default"
            AUTH_HEADER="Authorization: Bearer $JF_ACCESS_TOKEN"
        
            echo "üîç Checking if build '${BUILD_NAME}' is already indexed in Xray..."
        
            HTTP_RESPONSE=$(mktemp)
            HTTP_STATUS=$(curl -s -w "%{http_code}" -o "$HTTP_RESPONSE" \
            -H "Content-Type: application/json" \
            -H "$AUTH_HEADER" \
            "$JF_URL/xray/api/v1/binMgr/$BIN_MGR_ID/builds?projectKey=$JF_PROJECT_KEY")
        
            RESPONSE=$(cat "$HTTP_RESPONSE")
            rm -f "$HTTP_RESPONSE"
        
            echo "http_status=$HTTP_STATUS" >> "$GITHUB_OUTPUT"
            echo "api_response=$(echo "$RESPONSE" | jq -c .)" >> "$GITHUB_OUTPUT"
        
            IS_INDEXED=$(echo "$RESPONSE" | jq -r --arg name "$BUILD_NAME" '.indexed_builds[]? | select(. == $name)')
            IS_NOT_INDEXED=$(echo "$RESPONSE" | jq -r --arg name "$BUILD_NAME" '.non_indexed_builds[]? | select(. == $name)')
        
            if [[ -n "$IS_INDEXED" ]]; then
            echo "‚úÖ Build '$BUILD_NAME' is already indexed."
            exit 0
            elif [[ -n "$IS_NOT_INDEXED" ]]; then
            echo "‚öôÔ∏è Build '$BUILD_NAME' is not indexed. Triggering indexing..."
        
            INDEX_RES=$(curl -s -w "%{http_code}" -o /tmp/response.txt \
                -X POST \
                -H "Content-Type: application/json" \
                -H "$AUTH_HEADER" \
                -d "{\"names\": [\"$BUILD_NAME\"]}" \
                "$JF_URL/xray/api/v1/binMgr/builds?projectKey=$JF_PROJECT_KEY")
        
            echo "index_trigger_status=$INDEX_RES" >> "$GITHUB_OUTPUT"
            echo "index_trigger_response=$(cat /tmp/response.txt | jq -c .)" >> "$GITHUB_OUTPUT"
        
            if [[ "$INDEX_RES" -ne 200 ]]; then
                echo "‚ùå Failed to trigger indexing (HTTP $INDEX_RES)"
                cat /tmp/response.txt
                exit 1
            fi
        
            echo "‚úÖ Indexing triggered successfully for '$BUILD_NAME'."
            else
            echo "‚ùå Build '$BUILD_NAME' not found in either indexed or non-indexed list. Check if it's published to Artifactory."
            exit 1
            fi
        
        
      - name: Add migration comment
        uses: actions/github-script@v6
        with:
            script: |
                const httpStatus = `${{ steps.xray-index-check.outputs.http_status }}`
                const apiResponse = `${{ steps.xray-index-check.outputs.api_response }}`
                const indexStatus = `${{ steps.xray-index-check.outputs.index_trigger_status || 'N/A' }}`
                const indexResponse = `${{ steps.xray-index-check.outputs.index_trigger_response || 'N/A' }}`

                const body = `
                    :hourglass: **${{ steps.migration-type.outputs.result }} migration in progress.**

                    **Xray API Status:** \`${httpStatus}\`
                    **API Response:** \`\`\`json
                    ${apiResponse}
                    \`\`\`
                    **Index Trigger Status:** \`${indexStatus}\`
                    **Index Trigger Response:** \`\`\`json
                    ${indexResponse}
                    \`\`\`

                    [‚û°Ô∏è View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})
                `

                github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body
                })
